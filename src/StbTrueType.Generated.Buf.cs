// Generated by Sichem at 07.03.2020 14:32:25

using System;
using System.Runtime.InteropServices;

namespace StbTrueTypeSharp
{
	unsafe partial class StbTrueType
	{
		[StructLayout(LayoutKind.Sequential)]
		public struct stbtt__buf
		{
			public byte* data;
			public int cursor;
			public int size;
		}
		public static byte stbtt__buf_get8(stbtt__buf* b)
		{
			if ((b->cursor) >= (b->size))
				return (byte)(0);
			return (byte)(b->data[b->cursor++]);
		}

		public static byte stbtt__buf_peek8(stbtt__buf* b)
		{
			if ((b->cursor) >= (b->size))
				return (byte)(0);
			return (byte)(b->data[b->cursor]);
		}

		public static void stbtt__buf_seek(stbtt__buf* b, int o)
		{
			b->cursor = (int)((((o) > (b->size)) || ((o) < (0))) ? b->size : o);
		}

		public static void stbtt__buf_skip(stbtt__buf* b, int o)
		{
			stbtt__buf_seek(b, (int)(b->cursor + o));
		}

		public static uint stbtt__buf_get(stbtt__buf* b, int n)
		{
			uint v = (uint)(0);
			int i = 0;
			for (i = (int)(0); (i) < (n); i++)
			{
				v = (uint)((v << 8) | stbtt__buf_get8(b));
			}
			return (uint)(v);
		}

		public static stbtt__buf stbtt__buf_range(stbtt__buf* b, int o, int s)
		{
			stbtt__buf r = (stbtt__buf)(stbtt__new_buf((null), (ulong)(0)));
			if (((((o) < (0)) || ((s) < (0))) || ((o) > (b->size))) || ((s) > (b->size - o)))
				return (stbtt__buf)(r);
			r.data = b->data + o;
			r.size = (int)(s);
			return (stbtt__buf)(r);
		}

		public static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)
		{
			int count = 0;
			int offsize = 0;
			int start = 0;
			int end = 0;
			stbtt__buf_seek(&b, (int)(0));
			count = (int)(stbtt__buf_get((&b), (int)(2)));
			offsize = (int)(stbtt__buf_get8(&b));
			stbtt__buf_skip(&b, (int)(i * offsize));
			start = (int)(stbtt__buf_get(&b, (int)(offsize)));
			end = (int)(stbtt__buf_get(&b, (int)(offsize)));
			return (stbtt__buf)(stbtt__buf_range(&b, (int)(2 + (count + 1) * offsize + start), (int)(end - start)));
		}

		public static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)
		{
			uint subrsoff = (uint)(0);
			uint* private_loc = stackalloc uint[2];
			private_loc[0] = (uint)(0);
			private_loc[1] = (uint)(0);

			stbtt__buf pdict = new stbtt__buf();
			stbtt__dict_get_ints(&fontdict, (int)(18), (int)(2), private_loc);
			if ((private_loc[1] == 0) || (private_loc[0] == 0))
				return (stbtt__buf)(stbtt__new_buf((null), (ulong)(0)));
			pdict = (stbtt__buf)(stbtt__buf_range(&cff, (int)(private_loc[1]), (int)(private_loc[0])));
			stbtt__dict_get_ints(&pdict, (int)(19), (int)(1), &subrsoff);
			if (subrsoff == 0)
				return (stbtt__buf)(stbtt__new_buf((null), (ulong)(0)));
			stbtt__buf_seek(&cff, (int)(private_loc[1] + subrsoff));
			return (stbtt__buf)(stbtt__cff_get_index(&cff));
		}

		public static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)
		{
			int count = (int)(stbtt__cff_index_count(&idx));
			int bias = (int)(107);
			if ((count) >= (33900))
				bias = (int)(32768);
			else if ((count) >= (1240))
				bias = (int)(1131);
			n += (int)(bias);
			if (((n) < (0)) || ((n) >= (count)))
				return (stbtt__buf)(stbtt__new_buf((null), (ulong)(0)));
			return (stbtt__buf)(stbtt__cff_index_get((stbtt__buf)(idx), (int)(n)));
		}
	}
}